/**my version of cocktail sort**/
import java.util.*;
public class metronome
{
   public static void main()
   {
       int arr[]=new int [45];          
       Random r=new Random();
       for(int i=0;i<arr.length;i++)
       arr[i]=r.nextInt(2*arr.length)+1;  
       ///arr[i]=arr.length-i;       
       mymethod(arr,0,44);
    }      
   public static void mymethod(int arr[],final int beg,final int end)
    {
       int sgn=1,i=beg,temp,shift=0;
       while(shift<end-beg)
       {
           while(sgn*(2*i-beg-end)<end-shift-beg)
           {                  
               if(sgn*arr[i]>sgn*arr[i+sgn])
               {
                   temp=arr[i];
                   arr[i]=arr[i+sgn];
                   arr[i+sgn]=temp;
               }     
               i+=sgn;
               print(arr,i,shift,sgn,beg,end);
           }      
            sgn*=-1;
            shift+=sgn+1;
            i+=sgn;
       } 
   }   
   public static void mymethod2(int arr[],int beg,int end)
    {
       int sgn=1,i=beg,temp;
       while(beg!=end)
       {
           while(beg<=i+sgn&&i+sgn<=end)
           {                  
               if(sgn*arr[i]>sgn*arr[i+sgn])
               {
                   temp=arr[i];
                   arr[i]=arr[i+sgn];
                   arr[i+sgn]=temp;
               }     
               i+=sgn;
               print(arr,i,beg,end);
           }      
            end-=(1+sgn)/2;
            sgn*=-1;
            beg+=(1+sgn)/2;
            i+=sgn;
       } 
   }
   
   public static void print(int arr[],int k,int shift,int sgn,final int beg,final int end)
   {
       System.out.println("\f");
       shift/=2;
       char ch;
       for(int i=0;i<arr.length;i++)
       {    
            ch='+';  
            if(i<beg||i>end)
            ch='~';
            else if((i<beg+shift)||(sgn==1&&i>end-shift)||(sgn==-1&&i>end-shift-1))
            ch='#';
            else
            ch='+';
            if(i==k)
            ch='%';            
           for(int j=1;j<=arr[i];j++)
           System.out.print(ch);           
           System.out.println();
       }       
       try{Thread.sleep(50);}catch(Exception e){}
   }   
   public static void print(int arr[],int k,int beg,int end)
   {
       System.out.println("\f");
       char ch;
       for(int i=0;i<arr.length;i++)
       {    
            ch='+';  
            if(i<beg||i>end)
            ch='#';
            if(i==k)
            ch='%';            
           for(int j=1;j<=arr[i];j++)
           System.out.print(ch);           
           System.out.println();
       }       
       try{Thread.sleep(50);}catch(Exception e){}
   }
   /*
    public static void mymethod(int arr[])
    {
       int sgn=1,i=0,temp,shift=0;
       while(shift<arr.length-1)
       {
           while(sgn*(2*i-(arr.length-1))<(arr.length-1)-shift)
           {                  
               if(sgn*arr[i]>sgn*arr[i+sgn])
               {
                   temp=arr[i];
                   arr[i]=arr[i+sgn];
                   arr[i+sgn]=temp;
               }     
               i+=sgn;
               print(arr,i,shift,sgn);
           }      
            sgn*=-1;
            shift+=sgn+1;
            i+=sgn;
       } 
   }
   */
}
